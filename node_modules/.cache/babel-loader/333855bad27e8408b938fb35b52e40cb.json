{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport omit from 'lodash/omit';\nimport { addStyle, getWidth } from 'dom-lib';\nimport { getDOMNode, mergeRefs, useElementResize, useClassNames } from '../utils';\nvar omitProps = ['placement', 'arrowOffsetLeft', 'arrowOffsetTop', 'positionLeft', 'positionTop', 'getPositionInstance', 'getToggleInstance', 'autoWidth'];\nvar resizePlacement = ['topStart', 'topEnd', 'leftEnd', 'rightEnd', 'auto', 'autoVerticalStart', 'autoVerticalEnd', 'autoHorizontalEnd'];\nvar PickerOverlay = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker-menu' : _props$classPrefix,\n      autoWidth = props.autoWidth,\n      className = props.className,\n      placement = props.placement,\n      target = props.target,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"autoWidth\", \"className\", \"placement\", \"target\"]);\n\n  var overlayRef = useRef();\n  var handleResize = useCallback(function () {\n    var instance = target === null || target === void 0 ? void 0 : target.current;\n\n    if (instance && resizePlacement.includes(placement)) {\n      instance.updatePosition();\n    }\n  }, [target, placement]);\n  useElementResize(useCallback(function () {\n    return overlayRef.current;\n  }, []), handleResize);\n  useEffect(function () {\n    var toggle = target === null || target === void 0 ? void 0 : target.current;\n\n    if (autoWidth && toggle.root) {\n      // Get the width value of the button,\n      // and then set it to the menu to make their width consistent.\n      var width = getWidth(getDOMNode(toggle.root));\n      addStyle(overlayRef.current, 'min-width', width + \"px\");\n    }\n  }, [autoWidth, target, overlayRef]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(Component, _extends({}, omit(rest, omitProps), {\n    ref: mergeRefs(overlayRef, ref),\n    className: classes\n  }));\n});\nPickerOverlay.displayName = 'PickerOverlay';\nexport default PickerOverlay;","map":{"version":3,"sources":["/mnt/c/Users/moham/documents/CSE 3311/Team9Project/node_modules/rsuite/esm/Picker/PickerOverlay.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useRef","useCallback","useEffect","omit","addStyle","getWidth","getDOMNode","mergeRefs","useElementResize","useClassNames","omitProps","resizePlacement","PickerOverlay","forwardRef","props","ref","_props$as","as","Component","_props$classPrefix","classPrefix","autoWidth","className","placement","target","rest","overlayRef","handleResize","instance","current","includes","updatePosition","toggle","root","width","_useClassNames","withClassPrefix","merge","classes","createElement","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useRef, useCallback, useEffect } from 'react';\nimport omit from 'lodash/omit';\nimport { addStyle, getWidth } from 'dom-lib';\nimport { getDOMNode, mergeRefs, useElementResize, useClassNames } from '../utils';\nvar omitProps = ['placement', 'arrowOffsetLeft', 'arrowOffsetTop', 'positionLeft', 'positionTop', 'getPositionInstance', 'getToggleInstance', 'autoWidth'];\nvar resizePlacement = ['topStart', 'topEnd', 'leftEnd', 'rightEnd', 'auto', 'autoVerticalStart', 'autoVerticalEnd', 'autoHorizontalEnd'];\nvar PickerOverlay = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker-menu' : _props$classPrefix,\n      autoWidth = props.autoWidth,\n      className = props.className,\n      placement = props.placement,\n      target = props.target,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"classPrefix\", \"autoWidth\", \"className\", \"placement\", \"target\"]);\n\n  var overlayRef = useRef();\n  var handleResize = useCallback(function () {\n    var instance = target === null || target === void 0 ? void 0 : target.current;\n\n    if (instance && resizePlacement.includes(placement)) {\n      instance.updatePosition();\n    }\n  }, [target, placement]);\n  useElementResize(useCallback(function () {\n    return overlayRef.current;\n  }, []), handleResize);\n  useEffect(function () {\n    var toggle = target === null || target === void 0 ? void 0 : target.current;\n\n    if (autoWidth && toggle.root) {\n      // Get the width value of the button,\n      // and then set it to the menu to make their width consistent.\n      var width = getWidth(getDOMNode(toggle.root));\n      addStyle(overlayRef.current, 'min-width', width + \"px\");\n    }\n  }, [autoWidth, target, overlayRef]);\n\n  var _useClassNames = useClassNames(classPrefix),\n      withClassPrefix = _useClassNames.withClassPrefix,\n      merge = _useClassNames.merge;\n\n  var classes = merge(className, withClassPrefix());\n  return /*#__PURE__*/React.createElement(Component, _extends({}, omit(rest, omitProps), {\n    ref: mergeRefs(overlayRef, ref),\n    className: classes\n  }));\n});\nPickerOverlay.displayName = 'PickerOverlay';\nexport default PickerOverlay;"]},"metadata":{},"sourceType":"module"}