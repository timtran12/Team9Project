{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSupported;\n\nvar _CookieStorage = require('./CookieStorage');\n\nvar TEST_KEY = '__test';\n\nfunction hasStorage(name) {\n  try {\n    var storage = window[name];\n    storage.setItem(TEST_KEY, '1');\n    storage.removeItem(TEST_KEY);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isSupported() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'localStorage';\n  var storage = String(name).replace(/storage$/i, '').toLowerCase();\n\n  if (storage === 'local') {\n    return hasStorage('localStorage');\n  }\n\n  if (storage === 'session') {\n    return hasStorage('sessionStorage');\n  }\n\n  if (storage === 'cookie') {\n    return (0, _CookieStorage.hasCookies)();\n  }\n\n  if (storage === 'memory') {\n    return true;\n  }\n\n  throw new Error('Storage method `' + name + '` is not available.\\n    Please use one of the following: localStorage, sessionStorage, cookieStorage, memoryStorage.');\n}","map":{"version":3,"sources":["/mnt/c/Users/moham/documents/CSE 3311/Team9Project/node_modules/local-storage-fallback/lib/isSupported.js"],"names":["Object","defineProperty","exports","value","default","isSupported","_CookieStorage","require","TEST_KEY","hasStorage","name","storage","window","setItem","removeItem","e","arguments","length","undefined","String","replace","toLowerCase","hasCookies","Error"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,WAAlB;;AAEA,IAAIC,cAAc,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AAEA,IAAIC,QAAQ,GAAG,QAAf;;AAEA,SAASC,UAAT,CAAoBC,IAApB,EAA0B;AACxB,MAAI;AACF,QAAIC,OAAO,GAAGC,MAAM,CAACF,IAAD,CAApB;AACAC,IAAAA,OAAO,CAACE,OAAR,CAAgBL,QAAhB,EAA0B,GAA1B;AACAG,IAAAA,OAAO,CAACG,UAAR,CAAmBN,QAAnB;AACA,WAAO,IAAP;AACD,GALD,CAKE,OAAOO,CAAP,EAAU;AACV,WAAO,KAAP;AACD;AACF;;AAED,SAASV,WAAT,GAAuB;AACrB,MAAIK,IAAI,GAAGM,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,cAA/E;AAEA,MAAIL,OAAO,GAAGQ,MAAM,CAACT,IAAD,CAAN,CAAaU,OAAb,CAAqB,WAArB,EAAkC,EAAlC,EAAsCC,WAAtC,EAAd;;AAEA,MAAIV,OAAO,KAAK,OAAhB,EAAyB;AACvB,WAAOF,UAAU,CAAC,cAAD,CAAjB;AACD;;AAED,MAAIE,OAAO,KAAK,SAAhB,EAA2B;AACzB,WAAOF,UAAU,CAAC,gBAAD,CAAjB;AACD;;AAED,MAAIE,OAAO,KAAK,QAAhB,EAA0B;AACxB,WAAO,CAAC,GAAGL,cAAc,CAACgB,UAAnB,GAAP;AACD;;AAED,MAAIX,OAAO,KAAK,QAAhB,EAA0B;AACxB,WAAO,IAAP;AACD;;AAED,QAAM,IAAIY,KAAJ,CAAU,qBAAqBb,IAArB,GAA4B,uHAAtC,CAAN;AACD","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isSupported;\n\nvar _CookieStorage = require('./CookieStorage');\n\nvar TEST_KEY = '__test';\n\nfunction hasStorage(name) {\n  try {\n    var storage = window[name];\n    storage.setItem(TEST_KEY, '1');\n    storage.removeItem(TEST_KEY);\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction isSupported() {\n  var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'localStorage';\n\n  var storage = String(name).replace(/storage$/i, '').toLowerCase();\n\n  if (storage === 'local') {\n    return hasStorage('localStorage');\n  }\n\n  if (storage === 'session') {\n    return hasStorage('sessionStorage');\n  }\n\n  if (storage === 'cookie') {\n    return (0, _CookieStorage.hasCookies)();\n  }\n\n  if (storage === 'memory') {\n    return true;\n  }\n\n  throw new Error('Storage method `' + name + '` is not available.\\n    Please use one of the following: localStorage, sessionStorage, cookieStorage, memoryStorage.');\n}"]},"metadata":{},"sourceType":"script"}