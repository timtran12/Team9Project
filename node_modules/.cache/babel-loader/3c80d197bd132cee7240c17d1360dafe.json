{"ast":null,"code":"import { useCallback, useContext, useRef } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from './DisclosureContext';\nimport { KEY_VALUES } from '../utils';\n\nfunction DisclosureButton(props) {\n  var children = props.children;\n  var buttonRef = useRef();\n\n  var _useContext = useContext(DisclosureContext),\n      open = _useContext[0].open,\n      dispatch = _useContext[1],\n      onToggle = _useContext[2].onToggle;\n\n  var toggle = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    } else {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onClick = useCallback(function (event) {\n    toggle(event);\n  }, [toggle]);\n  var onKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      case KEY_VALUES.ENTER:\n      case KEY_VALUES.SPACE:\n        event.preventDefault();\n        event.stopPropagation();\n        toggle(event);\n        break;\n    }\n  }, [toggle]);\n  return children({\n    role: 'button',\n    'aria-expanded': open,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    open: open\n  }, buttonRef);\n}\n\nDisclosureButton.displayName = 'Disclosure.Button';\nexport default DisclosureButton;","map":{"version":3,"sources":["/mnt/c/Users/moham/documents/CSE 3311/Team9Project/node_modules/rsuite/esm/Disclosure/DisclosureButton.js"],"names":["useCallback","useContext","useRef","DisclosureContext","DisclosureActionTypes","KEY_VALUES","DisclosureButton","props","children","buttonRef","_useContext","open","dispatch","onToggle","toggle","event","type","Show","Hide","onClick","onKeyDown","key","ENTER","SPACE","preventDefault","stopPropagation","role","displayName"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,UAAtB,EAAkCC,MAAlC,QAAgD,OAAhD;AACA,OAAOC,iBAAP,IAA4BC,qBAA5B,QAAyD,qBAAzD;AACA,SAASC,UAAT,QAA2B,UAA3B;;AAEA,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAC/B,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AACA,MAAIC,SAAS,GAAGP,MAAM,EAAtB;;AAEA,MAAIQ,WAAW,GAAGT,UAAU,CAACE,iBAAD,CAA5B;AAAA,MACIQ,IAAI,GAAGD,WAAW,CAAC,CAAD,CAAX,CAAeC,IAD1B;AAAA,MAEIC,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAF1B;AAAA,MAGIG,QAAQ,GAAGH,WAAW,CAAC,CAAD,CAAX,CAAeG,QAH9B;;AAKA,MAAIC,MAAM,GAAGd,WAAW,CAAC,UAAUe,KAAV,EAAiB;AACxC,QAAI,CAACJ,IAAL,EAAW;AACTC,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEZ,qBAAqB,CAACa;AADrB,OAAD,CAAR;AAGAJ,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC,IAAD,EAAOE,KAAP,CAA5D;AACD,KALD,MAKO;AACLH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEZ,qBAAqB,CAACc;AADrB,OAAD,CAAR;AAGAL,MAAAA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,KAAK,CAAvC,GAA2C,KAAK,CAAhD,GAAoDA,QAAQ,CAAC,KAAD,EAAQE,KAAR,CAA5D;AACD;AACF,GAZuB,EAYrB,CAACJ,IAAD,EAAOC,QAAP,EAAiBC,QAAjB,CAZqB,CAAxB;AAaA,MAAIM,OAAO,GAAGnB,WAAW,CAAC,UAAUe,KAAV,EAAiB;AACzCD,IAAAA,MAAM,CAACC,KAAD,CAAN;AACD,GAFwB,EAEtB,CAACD,MAAD,CAFsB,CAAzB;AAGA,MAAIM,SAAS,GAAGpB,WAAW,CAAC,UAAUe,KAAV,EAAiB;AAC3C,YAAQA,KAAK,CAACM,GAAd;AACE,WAAKhB,UAAU,CAACiB,KAAhB;AACA,WAAKjB,UAAU,CAACkB,KAAhB;AACER,QAAAA,KAAK,CAACS,cAAN;AACAT,QAAAA,KAAK,CAACU,eAAN;AACAX,QAAAA,MAAM,CAACC,KAAD,CAAN;AACA;AANJ;AAQD,GAT0B,EASxB,CAACD,MAAD,CATwB,CAA3B;AAUA,SAAON,QAAQ,CAAC;AACdkB,IAAAA,IAAI,EAAE,QADQ;AAEd,qBAAiBf,IAFH;AAGdQ,IAAAA,OAAO,EAAEA,OAHK;AAIdC,IAAAA,SAAS,EAAEA,SAJG;AAKdT,IAAAA,IAAI,EAAEA;AALQ,GAAD,EAMZF,SANY,CAAf;AAOD;;AAEDH,gBAAgB,CAACqB,WAAjB,GAA+B,mBAA/B;AACA,eAAerB,gBAAf","sourcesContent":["import { useCallback, useContext, useRef } from 'react';\nimport DisclosureContext, { DisclosureActionTypes } from './DisclosureContext';\nimport { KEY_VALUES } from '../utils';\n\nfunction DisclosureButton(props) {\n  var children = props.children;\n  var buttonRef = useRef();\n\n  var _useContext = useContext(DisclosureContext),\n      open = _useContext[0].open,\n      dispatch = _useContext[1],\n      onToggle = _useContext[2].onToggle;\n\n  var toggle = useCallback(function (event) {\n    if (!open) {\n      dispatch({\n        type: DisclosureActionTypes.Show\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(true, event);\n    } else {\n      dispatch({\n        type: DisclosureActionTypes.Hide\n      });\n      onToggle === null || onToggle === void 0 ? void 0 : onToggle(false, event);\n    }\n  }, [open, dispatch, onToggle]);\n  var onClick = useCallback(function (event) {\n    toggle(event);\n  }, [toggle]);\n  var onKeyDown = useCallback(function (event) {\n    switch (event.key) {\n      case KEY_VALUES.ENTER:\n      case KEY_VALUES.SPACE:\n        event.preventDefault();\n        event.stopPropagation();\n        toggle(event);\n        break;\n    }\n  }, [toggle]);\n  return children({\n    role: 'button',\n    'aria-expanded': open,\n    onClick: onClick,\n    onKeyDown: onKeyDown,\n    open: open\n  }, buttonRef);\n}\n\nDisclosureButton.displayName = 'Disclosure.Button';\nexport default DisclosureButton;"]},"metadata":{},"sourceType":"module"}