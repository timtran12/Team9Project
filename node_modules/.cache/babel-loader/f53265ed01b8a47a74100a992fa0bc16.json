{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Picker/VirtualizedList';\nimport CheckTreeNode from './CheckTreeNode';\nimport TreeContext from '../Tree/TreeContext';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_VALUES, mergeRefs, shallowEqual } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler, isSearching } from '../utils/treeUtils';\nimport { maxTreeHeight } from '../TreePicker/TreePicker';\nvar emptyArray = [];\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$data = props.data,\n      data = _props$data === void 0 ? emptyArray : _props$data,\n      style = props.style,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$countable = props.countable,\n      countable = _props$countable === void 0 ? true : _props$countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      overrideLocale = props.locale,\n      _props$cascade = props.cascade,\n      cascade = _props$cascade === void 0 ? true : _props$cascade,\n      disabled = props.disabled,\n      _props$valueKey = props.valueKey,\n      valueKey = _props$valueKey === void 0 ? 'value' : _props$valueKey,\n      _props$labelKey = props.labelKey,\n      labelKey = _props$labelKey === void 0 ? 'label' : _props$labelKey,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      _props$childrenKey = props.childrenKey,\n      childrenKey = _props$childrenKey === void 0 ? 'children' : _props$childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? emptyArray : _props$defaultValue,\n      defaultExpandAll = props.defaultExpandAll,\n      _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray : _props$disabledItemVa,\n      controlledExpandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 360 : _props$height,\n      menuStyle = props.menuStyle,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? true : _props$searchable,\n      virtualized = props.virtualized,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      menuClassName = props.menuClassName,\n      _props$menuAutoWidth = props.menuAutoWidth,\n      menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth,\n      _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? emptyArray : _props$uncheckableIte,\n      id = props.id,\n      listProps = props.listProps,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"appearance\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"locale\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"listProps\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var _useContext = useContext(TreeContext),\n      inline = _useContext.inline;\n\n  var triggerRef = useRef();\n  var targetRef = useRef();\n  var listRef = useRef();\n  var overlayRef = useRef();\n  var searchInputRef = useRef();\n  var treeViewRef = useRef();\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    var formattedNodes = [];\n\n    if (virtualized) {\n      formattedNodes = formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {\n        cascade: cascade,\n        searchKeyword: searchKeywordState\n      }).filter(function (item) {\n        return item.visible;\n      });\n    } else {\n      formattedNodes = getFormattedTree(filteredData, flattenNodes, {\n        childrenKey: childrenKey,\n        cascade: cascade\n      }).map(function (node) {\n        return render === null || render === void 0 ? void 0 : render(node, 1);\n      });\n    }\n\n    return formattedNodes;\n  }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: shallowEqual(focusItemValue, node[valueKey]),\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return shallowEqual(item, node[valueKey]);\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    focusToActiveTreeNode({\n      list: listRef.current,\n      valueKey: valueKey,\n      selector: \".\" + checkTreePrefix('node-active'),\n      activeNode: activeNode,\n      virtualized: virtualized,\n      container: treeViewRef.current,\n      formattedNodes: getFormattedNodes()\n    });\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = nodes[node.refKey];\n\n    if (cascade) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = nodes[node.refKey];\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]);\n  var handleSelect = useCallback(function (node, event) {\n    if (!node) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !flattenNodes[node.refKey].check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n  }, [cascade, valueKey, flattenNodes, isControlled, uncheckableItemValues, setValue, onChange, onSelect, toggleChecked, unSerializeList]);\n\n  var hasValue = function hasValue() {\n    var selectedValues = Object.keys(flattenNodes).map(function (refKey) {\n      return flattenNodes[refKey][valueKey];\n    }).filter(function (item) {\n      return value.some(function (v) {\n        return shallowEqual(v, item);\n      });\n    });\n    return !!selectedValues.length;\n  };\n\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef\n  }, inline);\n  var handleClean = useCallback(function (event) {\n    var target = event.target; // exclude searchBar\n\n    if (target.matches('div[role=\"searchbox\"] > input')) {\n      return;\n    }\n\n    setActiveNode(null);\n    setValue([]);\n    setFocusItemValue(null);\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: [],\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues]);\n  var handleFocusItem = useCallback(function (key) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    }, isSearching(searchKeywordState));\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (key === KEY_VALUES.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (key === KEY_VALUES.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [searchKeywordState, checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey]);\n  var handleRightArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_VALUES.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    searchInputRef: searchInputRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_VALUES.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_VALUES.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_VALUES.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_VALUES.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(refKey, _ref);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(refKey, _ref2);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(nodes) {\n    return function (_ref3) {\n      var key = _ref3.key,\n          index = _ref3.index,\n          style = _ref3.style;\n      var node = nodes[index];\n      var layer = node.layer,\n          refKey = node.refKey,\n          visible = node.visible;\n      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n        expand: expand\n      }), layer), {\n        hasChildren: node.hasChildren\n      });\n\n      return visible && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n        style: style,\n        key: key,\n        ref: function ref(_ref4) {\n          return saveTreeNodeRef(refKey, _ref4);\n        }\n      }, nodeProps));\n    };\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren, _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: inline ? mergeRefs(treeViewRef, ref) : treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : maxTreeHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(List, _extends({\n        ref: listRef,\n        width: width,\n        height: height,\n        rowHeight: 36,\n        rowCount: formattedNodes.length,\n        rowRenderer: renderVirtualListNode(formattedNodes),\n        scrollToAlignment: \"center\"\n      }, listProps));\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var styles = virtualized ? _extends({\n      height: height\n    }, mergedMenuStyle) : _extends({}, mergedMenuStyle);\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: styles,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState,\n      inputRef: searchInputRef\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n\n  var hasValidValue = hasValue() || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n  var selectedItems = getSelectedItems(flattenNodes, value, valueKey);\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    appearance: appearance,\n    countable: countable,\n    cleanable: cleanable,\n    disabled: disabled,\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    appearance: appearance,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;","map":{"version":3,"sources":["/mnt/c/Users/moham/documents/CSE 3311/Team9Project/node_modules/rsuite/esm/CheckTreePicker/CheckTreePicker.js"],"names":["_extends","_objectWithoutPropertiesLoose","_isUndefined","_cloneDeep","_omit","_isFunction","_pick","_isNil","React","useState","useRef","useEffect","useCallback","useContext","PropTypes","classNames","List","AutoSizer","CheckTreeNode","TreeContext","createChainedFunction","useCustom","useClassNames","useControlled","KEY_VALUES","mergeRefs","shallowEqual","PickerToggle","onMenuKeyDown","_onMenuKeyDown","PickerOverlay","SearchBar","SelectedElement","PickerToggleTrigger","createConcatChildrenFunction","usePickerClassName","usePublicMethods","pickTriggerPropKeys","omitTriggerPropKeys","listPickerPropTypes","useToggleKeyDownEvent","isEveryChildChecked","isSomeNodeHasChildren","isAllSiblingNodeUncheckable","isEveryFirstLevelNodeUncheckable","getFormattedTree","getDisabledState","getCheckTreePickerDefaultValue","getSelectedItems","isNodeUncheckable","hasVisibleChildren","getExpandWhenSearching","useTreeSearch","useTreeNodeRefs","getDefaultExpandItemValues","useFlattenTreeData","focusNextItem","getFocusableItems","focusPreviousItem","toggleExpand","getActiveItem","useGetTreeNodeChildren","focusToActiveTreeNode","focusTreeNode","leftArrowHandler","rightArrowHandler","isSearching","maxTreeHeight","emptyArray","CheckTreePicker","forwardRef","props","ref","_props$as","as","Component","_props$data","data","style","_props$appearance","appearance","_props$cleanable","cleanable","_props$countable","countable","searchBy","toggleAs","searchKeyword","overrideLocale","locale","_props$cascade","cascade","disabled","_props$valueKey","valueKey","_props$labelKey","labelKey","_props$placement","placement","_props$childrenKey","childrenKey","placeholder","controlledValue","value","_props$defaultValue","defaultValue","defaultExpandAll","_props$disabledItemVa","disabledItemValues","controlledExpandItemValues","expandItemValues","defaultExpandItemValues","_props$height","height","menuStyle","_props$searchable","searchable","virtualized","className","_props$classPrefix","classPrefix","menuClassName","_props$menuAutoWidth","menuAutoWidth","_props$uncheckableIte","uncheckableItemValues","id","listProps","renderMenu","getChildren","renderExtraFooter","onEntered","onChange","onClean","onClose","onExited","onSearch","onSelect","onOpen","onScroll","onExpand","renderValue","renderTreeIcon","renderTreeNode","rest","_useContext","inline","triggerRef","targetRef","listRef","overlayRef","searchInputRef","treeViewRef","_useCustom","rtl","_useState","active","setActive","_useState2","activeNode","setActiveNode","_useClassNames","prefix","merge","_useClassNames2","checkTreePrefix","withCheckTreeClassPrefix","withClassPrefix","_useControlled","setValue","isControlled","_useGetTreeNodeChildr","treeData","setTreeData","setData","loadingNodeValues","loadChildren","_useControlled2","setExpandItemValues","_useState3","focusItemValue","setFocusItemValue","_useFlattenTreeData","callback","nodes","unSerializeList","key","forceUpdate","flattenNodes","formatVirtualizedTreeData","serializeListOnlyParent","_useTreeSearch","_filterData","event","filteredData","searchKeywordState","setSearchKeyword","handleSearch","setFilteredData","_useTreeNodeRefs","treeNodesRefs","saveTreeNodeRef","getFormattedNodes","render","formattedNodes","filter","item","visible","map","node","getTreeNodeProps","layer","label","focus","expand","loading","some","nodeData","checkState","uncheckable","allUncheckable","handleSelect","handleExpand","onRenderTreeNode","onRenderTreeIcon","focusActiveNode","list","current","selector","container","Array","isArray","toggleUpChecked","checked","currentNode","refKey","check","checkAll","parent","toggleDownChecked","isChecked","length","forEach","child","toggleChecked","values","v","includes","selectedValues","hasValue","Object","keys","handleOpen","_triggerRef$current","_triggerRef$current$o","open","call","handleClose","_triggerRef$current2","_triggerRef$current2$","_targetRef$current","close","nextExpandItemValues","isExpand","handleClean","target","matches","handleFocusItem","focusableItems","focusProps","nextFocusItemValue","DOWN","UP","handleLeftArrow","focusItem","onFocusItem","_focusItem$parent","_focusItem$parent2","handleRightArrow","selectActiveItem","activeItem","onPickerKeydown","toggle","onExit","down","up","left","right","enter","del","handleTreeKeydown","renderNode","children","visibleChildren","nodeProps","hasChildren","_merge","openClass","childrenClass","createElement","_ref","_ref2","renderVirtualListNode","_ref3","index","_ref4","renderCheckTree","_withCheckTreeClassPr","_merge2","classes","noResultsText","treeNodesClass","styles","undefined","role","onKeyDown","defaultHeight","width","_ref5","rowHeight","rowCount","rowRenderer","scrollToAlignment","renderDropdownMenu","positionProps","speakerRef","top","mergedMenuStyle","autoWidth","searchPlaceholder","inputRef","hasValidValue","selectedElement","selectedItems","_usePickerClassName","name","usedClassNamePropKeys","pickerProps","onEnter","speaker","concat","inputValue","displayName","propTypes","number","oneOf","any","bool","string","containerPadding","array","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _isUndefined from \"lodash/isUndefined\";\nimport _cloneDeep from \"lodash/cloneDeep\";\nimport _omit from \"lodash/omit\";\nimport _isFunction from \"lodash/isFunction\";\nimport _pick from \"lodash/pick\";\nimport _isNil from \"lodash/isNil\";\nimport React, { useState, useRef, useEffect, useCallback, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { List, AutoSizer } from '../Picker/VirtualizedList';\nimport CheckTreeNode from './CheckTreeNode';\nimport TreeContext from '../Tree/TreeContext';\nimport { createChainedFunction, useCustom, useClassNames, useControlled, KEY_VALUES, mergeRefs, shallowEqual } from '../utils';\nimport { PickerToggle, onMenuKeyDown as _onMenuKeyDown, PickerOverlay, SearchBar, SelectedElement, PickerToggleTrigger, createConcatChildrenFunction, usePickerClassName, usePublicMethods, pickTriggerPropKeys, omitTriggerPropKeys, listPickerPropTypes, useToggleKeyDownEvent } from '../Picker';\nimport { isEveryChildChecked, isSomeNodeHasChildren, isAllSiblingNodeUncheckable, isEveryFirstLevelNodeUncheckable, getFormattedTree, getDisabledState, getCheckTreePickerDefaultValue, getSelectedItems, isNodeUncheckable } from './utils';\nimport { hasVisibleChildren, getExpandWhenSearching, useTreeSearch, useTreeNodeRefs, getDefaultExpandItemValues, useFlattenTreeData, focusNextItem, getFocusableItems, focusPreviousItem, toggleExpand, getActiveItem, useGetTreeNodeChildren, focusToActiveTreeNode, focusTreeNode, leftArrowHandler, rightArrowHandler, isSearching } from '../utils/treeUtils';\nimport { maxTreeHeight } from '../TreePicker/TreePicker';\nvar emptyArray = [];\nvar CheckTreePicker = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'div' : _props$as,\n      _props$data = props.data,\n      data = _props$data === void 0 ? emptyArray : _props$data,\n      style = props.style,\n      _props$appearance = props.appearance,\n      appearance = _props$appearance === void 0 ? 'default' : _props$appearance,\n      _props$cleanable = props.cleanable,\n      cleanable = _props$cleanable === void 0 ? true : _props$cleanable,\n      _props$countable = props.countable,\n      countable = _props$countable === void 0 ? true : _props$countable,\n      searchBy = props.searchBy,\n      toggleAs = props.toggleAs,\n      searchKeyword = props.searchKeyword,\n      overrideLocale = props.locale,\n      _props$cascade = props.cascade,\n      cascade = _props$cascade === void 0 ? true : _props$cascade,\n      disabled = props.disabled,\n      _props$valueKey = props.valueKey,\n      valueKey = _props$valueKey === void 0 ? 'value' : _props$valueKey,\n      _props$labelKey = props.labelKey,\n      labelKey = _props$labelKey === void 0 ? 'label' : _props$labelKey,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottomStart' : _props$placement,\n      _props$childrenKey = props.childrenKey,\n      childrenKey = _props$childrenKey === void 0 ? 'children' : _props$childrenKey,\n      placeholder = props.placeholder,\n      controlledValue = props.value,\n      _props$defaultValue = props.defaultValue,\n      defaultValue = _props$defaultValue === void 0 ? emptyArray : _props$defaultValue,\n      defaultExpandAll = props.defaultExpandAll,\n      _props$disabledItemVa = props.disabledItemValues,\n      disabledItemValues = _props$disabledItemVa === void 0 ? emptyArray : _props$disabledItemVa,\n      controlledExpandItemValues = props.expandItemValues,\n      defaultExpandItemValues = props.defaultExpandItemValues,\n      _props$height = props.height,\n      height = _props$height === void 0 ? 360 : _props$height,\n      menuStyle = props.menuStyle,\n      _props$searchable = props.searchable,\n      searchable = _props$searchable === void 0 ? true : _props$searchable,\n      virtualized = props.virtualized,\n      className = props.className,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'picker' : _props$classPrefix,\n      menuClassName = props.menuClassName,\n      _props$menuAutoWidth = props.menuAutoWidth,\n      menuAutoWidth = _props$menuAutoWidth === void 0 ? true : _props$menuAutoWidth,\n      _props$uncheckableIte = props.uncheckableItemValues,\n      uncheckableItemValues = _props$uncheckableIte === void 0 ? emptyArray : _props$uncheckableIte,\n      id = props.id,\n      listProps = props.listProps,\n      renderMenu = props.renderMenu,\n      getChildren = props.getChildren,\n      renderExtraFooter = props.renderExtraFooter,\n      onEntered = props.onEntered,\n      onChange = props.onChange,\n      onClean = props.onClean,\n      onClose = props.onClose,\n      onExited = props.onExited,\n      onSearch = props.onSearch,\n      onSelect = props.onSelect,\n      onOpen = props.onOpen,\n      onScroll = props.onScroll,\n      onExpand = props.onExpand,\n      renderValue = props.renderValue,\n      renderTreeIcon = props.renderTreeIcon,\n      renderTreeNode = props.renderTreeNode,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"data\", \"style\", \"appearance\", \"cleanable\", \"countable\", \"searchBy\", \"toggleAs\", \"searchKeyword\", \"locale\", \"cascade\", \"disabled\", \"valueKey\", \"labelKey\", \"placement\", \"childrenKey\", \"placeholder\", \"value\", \"defaultValue\", \"defaultExpandAll\", \"disabledItemValues\", \"expandItemValues\", \"defaultExpandItemValues\", \"height\", \"menuStyle\", \"searchable\", \"virtualized\", \"className\", \"classPrefix\", \"menuClassName\", \"menuAutoWidth\", \"uncheckableItemValues\", \"id\", \"listProps\", \"renderMenu\", \"getChildren\", \"renderExtraFooter\", \"onEntered\", \"onChange\", \"onClean\", \"onClose\", \"onExited\", \"onSearch\", \"onSelect\", \"onOpen\", \"onScroll\", \"onExpand\", \"renderValue\", \"renderTreeIcon\", \"renderTreeNode\"]);\n\n  var _useContext = useContext(TreeContext),\n      inline = _useContext.inline;\n\n  var triggerRef = useRef();\n  var targetRef = useRef();\n  var listRef = useRef();\n  var overlayRef = useRef();\n  var searchInputRef = useRef();\n  var treeViewRef = useRef();\n\n  var _useCustom = useCustom('Picker', overrideLocale),\n      rtl = _useCustom.rtl,\n      locale = _useCustom.locale;\n\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState(null),\n      activeNode = _useState2[0],\n      setActiveNode = _useState2[1];\n\n  var _useClassNames = useClassNames(classPrefix),\n      prefix = _useClassNames.prefix,\n      merge = _useClassNames.merge;\n\n  var _useClassNames2 = useClassNames('check-tree'),\n      checkTreePrefix = _useClassNames2.prefix,\n      withCheckTreeClassPrefix = _useClassNames2.withClassPrefix;\n\n  var _useControlled = useControlled(controlledValue, defaultValue),\n      value = _useControlled[0],\n      setValue = _useControlled[1],\n      isControlled = _useControlled[2];\n\n  var _useGetTreeNodeChildr = useGetTreeNodeChildren(data, valueKey, childrenKey),\n      treeData = _useGetTreeNodeChildr.data,\n      setTreeData = _useGetTreeNodeChildr.setData,\n      loadingNodeValues = _useGetTreeNodeChildr.loadingNodeValues,\n      loadChildren = _useGetTreeNodeChildr.loadChildren;\n\n  var _useControlled2 = useControlled(controlledExpandItemValues, getDefaultExpandItemValues(treeData, {\n    defaultExpandAll: defaultExpandAll,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    defaultExpandItemValues: defaultExpandItemValues\n  })),\n      expandItemValues = _useControlled2[0],\n      setExpandItemValues = _useControlled2[1];\n\n  var _useState3 = useState(null),\n      focusItemValue = _useState3[0],\n      setFocusItemValue = _useState3[1];\n\n  var _useFlattenTreeData = useFlattenTreeData({\n    data: treeData,\n    labelKey: labelKey,\n    valueKey: valueKey,\n    childrenKey: childrenKey,\n    uncheckableItemValues: uncheckableItemValues,\n    callback: function callback(nodes) {\n      // after flattenData, always unSerialize check property value\n      unSerializeList({\n        nodes: nodes,\n        key: 'check',\n        value: value,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      forceUpdate();\n    }\n  }),\n      flattenNodes = _useFlattenTreeData.flattenNodes,\n      forceUpdate = _useFlattenTreeData.forceUpdate,\n      formatVirtualizedTreeData = _useFlattenTreeData.formatVirtualizedTreeData,\n      serializeListOnlyParent = _useFlattenTreeData.serializeListOnlyParent,\n      unSerializeList = _useFlattenTreeData.unSerializeList;\n\n  var _useTreeSearch = useTreeSearch({\n    labelKey: labelKey,\n    childrenKey: childrenKey,\n    searchKeyword: searchKeyword,\n    data: treeData,\n    searchBy: searchBy,\n    callback: function callback(searchKeyword, _filterData, event) {\n      onSearch === null || onSearch === void 0 ? void 0 : onSearch(searchKeyword, event);\n    }\n  }),\n      filteredData = _useTreeSearch.filteredData,\n      searchKeywordState = _useTreeSearch.searchKeywordState,\n      setSearchKeyword = _useTreeSearch.setSearchKeyword,\n      handleSearch = _useTreeSearch.handleSearch,\n      setFilteredData = _useTreeSearch.setFilteredData;\n\n  var _useTreeNodeRefs = useTreeNodeRefs(),\n      treeNodesRefs = _useTreeNodeRefs.treeNodesRefs,\n      saveTreeNodeRef = _useTreeNodeRefs.saveTreeNodeRef;\n  /**\n   * get formatted nodes for render tree\n   * @params render - renderNode function. only used when virtualized setting false\n   */\n\n\n  var getFormattedNodes = useCallback(function (render) {\n    var formattedNodes = [];\n\n    if (virtualized) {\n      formattedNodes = formatVirtualizedTreeData(flattenNodes, filteredData, expandItemValues, {\n        cascade: cascade,\n        searchKeyword: searchKeywordState\n      }).filter(function (item) {\n        return item.visible;\n      });\n    } else {\n      formattedNodes = getFormattedTree(filteredData, flattenNodes, {\n        childrenKey: childrenKey,\n        cascade: cascade\n      }).map(function (node) {\n        return render === null || render === void 0 ? void 0 : render(node, 1);\n      });\n    }\n\n    return formattedNodes;\n  }, [searchKeywordState, expandItemValues, filteredData, flattenNodes, formatVirtualizedTreeData, virtualized, childrenKey, cascade]);\n\n  var getTreeNodeProps = function getTreeNodeProps(node, layer) {\n    return {\n      as: Component,\n      rtl: rtl,\n      value: node[valueKey],\n      label: node[labelKey],\n      layer: layer,\n      focus: shallowEqual(focusItemValue, node[valueKey]),\n      expand: node.expand,\n      visible: node.visible,\n      loading: loadingNodeValues.some(function (item) {\n        return shallowEqual(item, node[valueKey]);\n      }),\n      disabled: getDisabledState(flattenNodes, node, {\n        disabledItemValues: disabledItemValues,\n        valueKey: valueKey\n      }),\n      nodeData: node,\n      checkState: node.checkState,\n      uncheckable: isNodeUncheckable(node, {\n        uncheckableItemValues: uncheckableItemValues,\n        valueKey: valueKey\n      }),\n      allUncheckable: isAllSiblingNodeUncheckable(node, flattenNodes, uncheckableItemValues, valueKey),\n      onSelect: handleSelect,\n      onExpand: handleExpand,\n      onRenderTreeNode: renderTreeNode,\n      onRenderTreeIcon: renderTreeIcon\n    };\n  };\n\n  var focusActiveNode = useCallback(function () {\n    focusToActiveTreeNode({\n      list: listRef.current,\n      valueKey: valueKey,\n      selector: \".\" + checkTreePrefix('node-active'),\n      activeNode: activeNode,\n      virtualized: virtualized,\n      container: treeViewRef.current,\n      formattedNodes: getFormattedNodes()\n    });\n  }, [checkTreePrefix, activeNode, getFormattedNodes, valueKey, virtualized]);\n  useEffect(function () {\n    setValue(getCheckTreePickerDefaultValue(value, uncheckableItemValues));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setFilteredData(data, searchKeywordState);\n    setTreeData(data);\n  }, [data, searchKeywordState, setFilteredData, setTreeData]);\n  useEffect(function () {\n    setFilteredData(treeData, searchKeywordState);\n  }, [treeData, searchKeywordState, setFilteredData]);\n  useEffect(function () {\n    if (Array.isArray(controlledExpandItemValues)) {\n      setExpandItemValues(controlledExpandItemValues);\n    }\n  }, [controlledExpandItemValues, setExpandItemValues]);\n  useEffect(function () {\n    setSearchKeyword(searchKeyword !== null && searchKeyword !== void 0 ? searchKeyword : '');\n  }, [searchKeyword, setSearchKeyword]);\n  useEffect(function () {\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: value,\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    forceUpdate();\n  }, [cascade, value, uncheckableItemValues, unSerializeList, flattenNodes, forceUpdate]);\n  var toggleUpChecked = useCallback(function (nodes, node, checked) {\n    var currentNode = nodes[node.refKey];\n\n    if (cascade) {\n      if (!checked) {\n        currentNode.check = checked;\n        currentNode.checkAll = checked;\n      } else {\n        if (isEveryChildChecked(nodes, currentNode)) {\n          currentNode.check = true;\n          currentNode.checkAll = true;\n        } else {\n          currentNode.check = false;\n          currentNode.checkAll = false;\n        }\n      }\n\n      if (currentNode.parent) {\n        toggleUpChecked(nodes, currentNode.parent, checked);\n      }\n    }\n  }, [cascade]);\n  var toggleDownChecked = useCallback(function (nodes, node, isChecked) {\n    var currentNode = nodes[node.refKey];\n    currentNode.check = isChecked;\n\n    if (!currentNode[childrenKey] || !currentNode[childrenKey].length || !cascade) {\n      currentNode.checkAll = false;\n    } else {\n      currentNode.checkAll = isChecked;\n      currentNode[childrenKey].forEach(function (child) {\n        toggleDownChecked(nodes, child, isChecked);\n      });\n    }\n  }, [cascade, childrenKey]);\n  var toggleChecked = useCallback(function (node, isChecked) {\n    var nodes = _cloneDeep(flattenNodes);\n\n    toggleDownChecked(nodes, node, isChecked);\n    node.parent && toggleUpChecked(nodes, node.parent, isChecked);\n    var values = serializeListOnlyParent(nodes, 'check'); // filter uncheckableItemValues\n\n    return values.filter(function (v) {\n      return !uncheckableItemValues.includes(v);\n    });\n  }, [flattenNodes, uncheckableItemValues, serializeListOnlyParent, toggleDownChecked, toggleUpChecked]);\n  var handleSelect = useCallback(function (node, event) {\n    if (!node) {\n      return;\n    }\n\n    var selectedValues = toggleChecked(node, !flattenNodes[node.refKey].check);\n\n    if (!isControlled) {\n      unSerializeList({\n        nodes: flattenNodes,\n        key: 'check',\n        value: selectedValues,\n        cascade: cascade,\n        uncheckableItemValues: uncheckableItemValues\n      });\n      setValue(selectedValues);\n    }\n\n    setActiveNode(node);\n    setFocusItemValue(node[valueKey]);\n    onChange === null || onChange === void 0 ? void 0 : onChange(selectedValues, event);\n    onSelect === null || onSelect === void 0 ? void 0 : onSelect(node, selectedValues, event);\n  }, [cascade, valueKey, flattenNodes, isControlled, uncheckableItemValues, setValue, onChange, onSelect, toggleChecked, unSerializeList]);\n\n  var hasValue = function hasValue() {\n    var selectedValues = Object.keys(flattenNodes).map(function (refKey) {\n      return flattenNodes[refKey][valueKey];\n    }).filter(function (item) {\n      return value.some(function (v) {\n        return shallowEqual(v, item);\n      });\n    });\n    return !!selectedValues.length;\n  };\n\n  var handleOpen = useCallback(function () {\n    var _triggerRef$current, _triggerRef$current$o;\n\n    (_triggerRef$current = triggerRef.current) === null || _triggerRef$current === void 0 ? void 0 : (_triggerRef$current$o = _triggerRef$current.open) === null || _triggerRef$current$o === void 0 ? void 0 : _triggerRef$current$o.call(_triggerRef$current);\n    setFocusItemValue(activeNode === null || activeNode === void 0 ? void 0 : activeNode[valueKey]);\n    focusActiveNode();\n    onOpen === null || onOpen === void 0 ? void 0 : onOpen();\n    setActive(true);\n  }, [activeNode, focusActiveNode, onOpen, valueKey]);\n  var handleClose = useCallback(function () {\n    var _triggerRef$current2, _triggerRef$current2$, _targetRef$current;\n\n    (_triggerRef$current2 = triggerRef.current) === null || _triggerRef$current2 === void 0 ? void 0 : (_triggerRef$current2$ = _triggerRef$current2.close) === null || _triggerRef$current2$ === void 0 ? void 0 : _triggerRef$current2$.call(_triggerRef$current2);\n    setSearchKeyword('');\n    onClose === null || onClose === void 0 ? void 0 : onClose();\n    setFocusItemValue(null);\n    setActive(false);\n    /**\n     * when using keyboard toggle picker, should refocus on PickerToggle Component after close picker menu\n     */\n\n    (_targetRef$current = targetRef.current) === null || _targetRef$current === void 0 ? void 0 : _targetRef$current.focus();\n  }, [onClose, setSearchKeyword]);\n  var handleExpand = useCallback(function (node) {\n    var nextExpandItemValues = toggleExpand({\n      node: node,\n      isExpand: !node.expand,\n      expandItemValues: expandItemValues,\n      valueKey: valueKey\n    });\n    setExpandItemValues(nextExpandItemValues);\n    onExpand === null || onExpand === void 0 ? void 0 : onExpand(nextExpandItemValues, node, createConcatChildrenFunction(node, node[valueKey], {\n      valueKey: valueKey,\n      childrenKey: childrenKey\n    }));\n\n    if (_isFunction(getChildren) && !node.expand && Array.isArray(node[childrenKey]) && node[childrenKey].length === 0) {\n      loadChildren(node, getChildren);\n    }\n  }, [childrenKey, expandItemValues, getChildren, loadChildren, onExpand, setExpandItemValues, valueKey]);\n  usePublicMethods(ref, {\n    triggerRef: triggerRef,\n    overlayRef: overlayRef,\n    targetRef: targetRef\n  }, inline);\n  var handleClean = useCallback(function (event) {\n    var target = event.target; // exclude searchBar\n\n    if (target.matches('div[role=\"searchbox\"] > input')) {\n      return;\n    }\n\n    setActiveNode(null);\n    setValue([]);\n    setFocusItemValue(null);\n    unSerializeList({\n      nodes: flattenNodes,\n      key: 'check',\n      value: [],\n      cascade: cascade,\n      uncheckableItemValues: uncheckableItemValues\n    });\n    onChange === null || onChange === void 0 ? void 0 : onChange([], event);\n  }, [cascade, flattenNodes, onChange, setValue, unSerializeList, uncheckableItemValues]);\n  var handleFocusItem = useCallback(function (key) {\n    var focusableItems = getFocusableItems(filteredData, {\n      disabledItemValues: disabledItemValues,\n      valueKey: valueKey,\n      childrenKey: childrenKey,\n      expandItemValues: expandItemValues\n    }, isSearching(searchKeywordState));\n    var selector = \".\" + checkTreePrefix('node-label');\n    var focusProps = {\n      focusItemValue: focusItemValue,\n      focusableItems: focusableItems,\n      treeNodesRefs: treeNodesRefs,\n      selector: selector,\n      valueKey: valueKey,\n      callback: function callback(nextFocusItemValue) {\n        setFocusItemValue(nextFocusItemValue);\n      }\n    };\n\n    if (key === KEY_VALUES.DOWN) {\n      focusNextItem(focusProps);\n      return;\n    }\n\n    if (key === KEY_VALUES.UP) {\n      focusPreviousItem(focusProps);\n    }\n  }, [searchKeywordState, checkTreePrefix, expandItemValues, filteredData, focusItemValue, treeNodesRefs, childrenKey, valueKey, disabledItemValues]);\n  var handleLeftArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    leftArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        var _focusItem$parent, _focusItem$parent2;\n\n        setFocusItemValue(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent = focusItem.parent) === null || _focusItem$parent === void 0 ? void 0 : _focusItem$parent[valueKey]);\n        focusTreeNode(focusItem === null || focusItem === void 0 ? void 0 : (_focusItem$parent2 = focusItem.parent) === null || _focusItem$parent2 === void 0 ? void 0 : _focusItem$parent2.refKey, treeNodesRefs, \".\" + checkTreePrefix('node-label'));\n      }\n    });\n  }, [checkTreePrefix, expandItemValues, flattenNodes, focusItemValue, handleExpand, treeNodesRefs, valueKey]);\n  var handleRightArrow = useCallback(function () {\n    var focusItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n    rightArrowHandler({\n      focusItem: focusItem,\n      expand: expandItemValues.includes(focusItem === null || focusItem === void 0 ? void 0 : focusItem[valueKey]),\n      childrenKey: childrenKey,\n      onExpand: handleExpand,\n      onFocusItem: function onFocusItem() {\n        handleFocusItem(KEY_VALUES.DOWN);\n      }\n    });\n  }, [focusItemValue, flattenNodes, valueKey, expandItemValues, childrenKey, handleExpand, handleFocusItem]);\n  var selectActiveItem = useCallback(function (event) {\n    var activeItem = getActiveItem(focusItemValue, flattenNodes, valueKey);\n\n    if (!isNodeUncheckable(activeItem, {\n      uncheckableItemValues: uncheckableItemValues,\n      valueKey: valueKey\n    }) && activeItem !== null) {\n      handleSelect(activeItem, event);\n    }\n  }, [flattenNodes, focusItemValue, handleSelect, uncheckableItemValues, valueKey]);\n  var onPickerKeydown = useToggleKeyDownEvent({\n    toggle: !focusItemValue || !active,\n    triggerRef: triggerRef,\n    targetRef: targetRef,\n    overlayRef: overlayRef,\n    searchInputRef: searchInputRef,\n    active: active,\n    onExit: handleClean,\n    onClose: handleClose,\n    onMenuKeyDown: function onMenuKeyDown(event) {\n      _onMenuKeyDown(event, {\n        down: function down() {\n          return handleFocusItem(KEY_VALUES.DOWN);\n        },\n        up: function up() {\n          return handleFocusItem(KEY_VALUES.UP);\n        },\n        left: rtl ? handleRightArrow : handleLeftArrow,\n        right: rtl ? handleLeftArrow : handleRightArrow,\n        enter: selectActiveItem,\n        del: handleClean\n      });\n    }\n  });\n  var handleTreeKeydown = useCallback(function (event) {\n    if (!treeViewRef.current) {\n      return;\n    }\n\n    _onMenuKeyDown(event, {\n      down: function down() {\n        return handleFocusItem(KEY_VALUES.DOWN);\n      },\n      up: function up() {\n        return handleFocusItem(KEY_VALUES.UP);\n      },\n      left: rtl ? handleRightArrow : handleLeftArrow,\n      right: rtl ? handleLeftArrow : handleRightArrow,\n      enter: selectActiveItem\n    });\n  }, [handleFocusItem, handleLeftArrow, handleRightArrow, rtl, selectActiveItem]);\n\n  var renderNode = function renderNode(node, layer) {\n    var visible = node.visible,\n        refKey = node.refKey; // when searching, all nodes should be expand\n\n    var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n    if (!visible) {\n      return null;\n    }\n\n    var children = node[childrenKey];\n    var visibleChildren = _isUndefined(searchKeywordState) || searchKeywordState.length === 0 ? !!children : hasVisibleChildren(node, childrenKey);\n\n    var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n      expand: expand\n    }), layer), {\n      hasChildren: visibleChildren\n    });\n\n    if (nodeProps.hasChildren) {\n      var _merge;\n\n      layer += 1;\n      var openClass = checkTreePrefix('open');\n      var childrenClass = merge(checkTreePrefix('node-children'), (_merge = {}, _merge[openClass] = expand && visibleChildren, _merge));\n      var nodes = children || [];\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: childrenClass,\n        key: node[valueKey]\n      }, /*#__PURE__*/React.createElement(CheckTreeNode, _extends({}, nodeProps, {\n        ref: function ref(_ref) {\n          return saveTreeNodeRef(refKey, _ref);\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: checkTreePrefix('children')\n      }, nodes.map(function (child) {\n        return renderNode(child, layer);\n      })));\n    }\n\n    return /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n      key: node[valueKey],\n      ref: function ref(_ref2) {\n        return saveTreeNodeRef(refKey, _ref2);\n      }\n    }, nodeProps));\n  };\n\n  var renderVirtualListNode = function renderVirtualListNode(nodes) {\n    return function (_ref3) {\n      var key = _ref3.key,\n          index = _ref3.index,\n          style = _ref3.style;\n      var node = nodes[index];\n      var layer = node.layer,\n          refKey = node.refKey,\n          visible = node.visible;\n      var expand = getExpandWhenSearching(searchKeywordState, expandItemValues.includes(node[valueKey]));\n\n      var nodeProps = _extends({}, getTreeNodeProps(_extends({}, node, {\n        expand: expand\n      }), layer), {\n        hasChildren: node.hasChildren\n      });\n\n      return visible && /*#__PURE__*/React.createElement(CheckTreeNode, _extends({\n        style: style,\n        key: key,\n        ref: function ref(_ref4) {\n          return saveTreeNodeRef(refKey, _ref4);\n        }\n      }, nodeProps));\n    };\n  };\n\n  var renderCheckTree = function renderCheckTree() {\n    var _withCheckTreeClassPr, _merge2;\n\n    var classes = withCheckTreeClassPrefix((_withCheckTreeClassPr = {}, _withCheckTreeClassPr[className !== null && className !== void 0 ? className : ''] = inline, _withCheckTreeClassPr['without-children'] = !isSomeNodeHasChildren, _withCheckTreeClassPr.virtualized = virtualized, _withCheckTreeClassPr));\n    var formattedNodes = getFormattedNodes(renderNode);\n\n    if (!formattedNodes.some(function (v) {\n      return v !== null;\n    })) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: prefix('none')\n      }, locale.noResultsText);\n    }\n\n    var treeNodesClass = merge(checkTreePrefix('nodes'), (_merge2 = {}, _merge2[checkTreePrefix('all-uncheckable')] = isEveryFirstLevelNodeUncheckable(flattenNodes, uncheckableItemValues, valueKey), _merge2));\n    var styles = inline ? _extends({\n      height: height\n    }, style) : {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: id ? id + \"-listbox\" : undefined,\n      ref: inline ? mergeRefs(treeViewRef, ref) : treeViewRef,\n      role: \"tree\",\n      \"aria-multiselectable\": true,\n      className: classes,\n      style: styles,\n      onScroll: onScroll,\n      onKeyDown: inline ? handleTreeKeydown : undefined\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: treeNodesClass\n    }, virtualized ? /*#__PURE__*/React.createElement(AutoSizer, {\n      defaultHeight: inline ? height : maxTreeHeight,\n      style: {\n        width: 'auto',\n        height: 'auto'\n      }\n    }, function (_ref5) {\n      var height = _ref5.height,\n          width = _ref5.width;\n      return /*#__PURE__*/React.createElement(List, _extends({\n        ref: listRef,\n        width: width,\n        height: height,\n        rowHeight: 36,\n        rowCount: formattedNodes.length,\n        rowRenderer: renderVirtualListNode(formattedNodes),\n        scrollToAlignment: \"center\"\n      }, listProps));\n    }) : formattedNodes));\n  };\n\n  var renderDropdownMenu = function renderDropdownMenu(positionProps, speakerRef) {\n    var left = positionProps.left,\n        top = positionProps.top,\n        className = positionProps.className;\n    var classes = classNames(className, menuClassName, prefix('check-tree-menu'));\n\n    var mergedMenuStyle = _extends({}, menuStyle, {\n      left: left,\n      top: top\n    });\n\n    var styles = virtualized ? _extends({\n      height: height\n    }, mergedMenuStyle) : _extends({}, mergedMenuStyle);\n    return /*#__PURE__*/React.createElement(PickerOverlay, {\n      autoWidth: menuAutoWidth,\n      className: classes,\n      style: styles,\n      ref: mergeRefs(overlayRef, speakerRef),\n      onKeyDown: onPickerKeydown,\n      target: triggerRef\n    }, searchable ? /*#__PURE__*/React.createElement(SearchBar, {\n      placeholder: locale.searchPlaceholder,\n      onChange: handleSearch,\n      value: searchKeywordState,\n      inputRef: searchInputRef\n    }) : null, renderMenu ? renderMenu(renderCheckTree()) : renderCheckTree(), renderExtraFooter === null || renderExtraFooter === void 0 ? void 0 : renderExtraFooter());\n  };\n  /**\n   * 1.Have a value and the value is valid.\n   * 2.Regardless of whether the value is valid, as long as renderValue is set, it is judged to have a value.\n   */\n\n\n  var hasValidValue = hasValue() || value.length > 0 && _isFunction(renderValue);\n\n  var selectedElement = placeholder;\n  var selectedItems = getSelectedItems(flattenNodes, value, valueKey);\n\n  if (hasValidValue) {\n    selectedElement = /*#__PURE__*/React.createElement(SelectedElement, {\n      selectedItems: selectedItems,\n      countable: countable,\n      valueKey: valueKey,\n      labelKey: labelKey,\n      childrenKey: childrenKey,\n      prefix: prefix,\n      cascade: cascade,\n      locale: locale\n    });\n\n    if (_isFunction(renderValue)) {\n      selectedElement = renderValue(value, selectedItems, selectedElement);\n\n      if (_isNil(selectedElement)) {\n        hasValidValue = false;\n      }\n    }\n  }\n\n  var _usePickerClassName = usePickerClassName(_extends({}, props, {\n    classPrefix: classPrefix,\n    appearance: appearance,\n    countable: countable,\n    cleanable: cleanable,\n    disabled: disabled,\n    hasValue: hasValidValue,\n    name: 'check-tree'\n  })),\n      classes = _usePickerClassName[0],\n      usedClassNamePropKeys = _usePickerClassName[1];\n\n  if (inline) {\n    return renderCheckTree();\n  }\n\n  return /*#__PURE__*/React.createElement(PickerToggleTrigger, {\n    pickerProps: _pick(props, pickTriggerPropKeys),\n    ref: triggerRef,\n    placement: placement,\n    onEnter: handleOpen,\n    onEntered: onEntered,\n    onExited: createChainedFunction(handleClose, onExited),\n    speaker: renderDropdownMenu\n  }, /*#__PURE__*/React.createElement(Component, {\n    className: classes,\n    style: style\n  }, /*#__PURE__*/React.createElement(PickerToggle, _extends({}, _omit(rest, [].concat(omitTriggerPropKeys, usedClassNamePropKeys)), {\n    id: id,\n    ref: targetRef,\n    appearance: appearance,\n    onKeyDown: onPickerKeydown,\n    onClean: createChainedFunction(handleClean, onClean),\n    cleanable: cleanable && !disabled,\n    disabled: disabled,\n    as: toggleAs,\n    hasValue: hasValidValue,\n    active: active,\n    placement: placement,\n    inputValue: value\n  }), selectedElement || locale.placeholder)));\n});\nCheckTreePicker.displayName = 'CheckTreePicker';\nCheckTreePicker.propTypes = _extends({}, listPickerPropTypes, {\n  height: PropTypes.number,\n  appearance: PropTypes.oneOf(['default', 'subtle']),\n  locale: PropTypes.any,\n  cascade: PropTypes.bool,\n  countable: PropTypes.bool,\n  searchable: PropTypes.bool,\n  virtualized: PropTypes.bool,\n  searchKeyword: PropTypes.string,\n  menuAutoWidth: PropTypes.bool,\n  defaultExpandAll: PropTypes.bool,\n  containerPadding: PropTypes.number,\n  disabledItemValues: PropTypes.array,\n  expandItemValues: PropTypes.array,\n  defaultExpandItemValues: PropTypes.array,\n  uncheckableItemValues: PropTypes.array,\n  onSearch: PropTypes.func,\n  onExpand: PropTypes.func,\n  onSelect: PropTypes.func,\n  renderMenu: PropTypes.func,\n  renderTreeNode: PropTypes.func,\n  renderTreeIcon: PropTypes.func,\n  searchBy: PropTypes.func,\n  onScroll: PropTypes.func\n});\nexport default CheckTreePicker;"]},"metadata":{},"sourceType":"module"}