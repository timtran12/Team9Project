{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, useControlled, useCustom } from '../utils';\nimport Plaintext from '../Plaintext';\n/**\n * fixme: Should contain an input[type=checkbox]\n */\n\nvar Toggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'span' : _props$as,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      plaintext = props.plaintext,\n      className = props.className,\n      checkedChildren = props.checkedChildren,\n      unCheckedChildren = props.unCheckedChildren,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'btn-toggle' : _props$classPrefix,\n      checkedProp = props.checked,\n      defaultChecked = props.defaultChecked,\n      size = props.size,\n      localeProp = props.locale,\n      onChange = props.onChange,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"disabled\", \"readOnly\", \"plaintext\", \"className\", \"checkedChildren\", \"unCheckedChildren\", \"classPrefix\", \"checked\", \"defaultChecked\", \"size\", \"locale\", \"onChange\"]);\n\n  var _useControlled = useControlled(checkedProp, defaultChecked),\n      checked = _useControlled[0],\n      setChecked = _useControlled[1];\n\n  var _useCustom = useCustom('Toggle', localeProp),\n      locale = _useCustom.locale;\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix(size, {\n    checked: checked,\n    disabled: disabled\n  }));\n  var inner = checked ? checkedChildren : unCheckedChildren;\n  var label = checked ? locale.on : locale.off;\n  var handleChange = useCallback(function (event) {\n    if (disabled || readOnly) {\n      return;\n    }\n\n    setChecked(!checked);\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked, event);\n  }, [checked, disabled, onChange, readOnly, setChecked]);\n\n  if (plaintext) {\n    return /*#__PURE__*/React.createElement(Plaintext, null, inner || label);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"switch\",\n    \"aria-checked\": checked,\n    \"aria-disabled\": disabled,\n    \"aria-label\": typeof inner === 'string' ? inner : label,\n    tabIndex: -1\n  }, rest, {\n    ref: ref,\n    className: classes,\n    onClick: handleChange\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('inner')\n  }, inner));\n});\nToggle.displayName = 'Toggle';\nToggle.propTypes = {\n  disabled: PropTypes.bool,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  checkedChildren: PropTypes.node,\n  unCheckedChildren: PropTypes.node,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default Toggle;","map":{"version":3,"sources":["/mnt/c/Users/moham/documents/CSE 3311/Team9Project/node_modules/rsuite/esm/Toggle/Toggle.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useCallback","PropTypes","useClassNames","useControlled","useCustom","Plaintext","Toggle","forwardRef","props","ref","_props$as","as","Component","disabled","readOnly","plaintext","className","checkedChildren","unCheckedChildren","_props$classPrefix","classPrefix","checkedProp","checked","defaultChecked","size","localeProp","locale","onChange","rest","_useControlled","setChecked","_useCustom","_useClassNames","merge","withClassPrefix","prefix","classes","inner","label","on","off","handleChange","event","createElement","role","tabIndex","onClick","displayName","propTypes","bool","node","string","func"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useClassNames, useControlled, useCustom } from '../utils';\nimport Plaintext from '../Plaintext';\n\n/**\n * fixme: Should contain an input[type=checkbox]\n */\nvar Toggle = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var _props$as = props.as,\n      Component = _props$as === void 0 ? 'span' : _props$as,\n      disabled = props.disabled,\n      readOnly = props.readOnly,\n      plaintext = props.plaintext,\n      className = props.className,\n      checkedChildren = props.checkedChildren,\n      unCheckedChildren = props.unCheckedChildren,\n      _props$classPrefix = props.classPrefix,\n      classPrefix = _props$classPrefix === void 0 ? 'btn-toggle' : _props$classPrefix,\n      checkedProp = props.checked,\n      defaultChecked = props.defaultChecked,\n      size = props.size,\n      localeProp = props.locale,\n      onChange = props.onChange,\n      rest = _objectWithoutPropertiesLoose(props, [\"as\", \"disabled\", \"readOnly\", \"plaintext\", \"className\", \"checkedChildren\", \"unCheckedChildren\", \"classPrefix\", \"checked\", \"defaultChecked\", \"size\", \"locale\", \"onChange\"]);\n\n  var _useControlled = useControlled(checkedProp, defaultChecked),\n      checked = _useControlled[0],\n      setChecked = _useControlled[1];\n\n  var _useCustom = useCustom('Toggle', localeProp),\n      locale = _useCustom.locale;\n\n  var _useClassNames = useClassNames(classPrefix),\n      merge = _useClassNames.merge,\n      withClassPrefix = _useClassNames.withClassPrefix,\n      prefix = _useClassNames.prefix;\n\n  var classes = merge(className, withClassPrefix(size, {\n    checked: checked,\n    disabled: disabled\n  }));\n  var inner = checked ? checkedChildren : unCheckedChildren;\n  var label = checked ? locale.on : locale.off;\n  var handleChange = useCallback(function (event) {\n    if (disabled || readOnly) {\n      return;\n    }\n\n    setChecked(!checked);\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked, event);\n  }, [checked, disabled, onChange, readOnly, setChecked]);\n\n  if (plaintext) {\n    return /*#__PURE__*/React.createElement(Plaintext, null, inner || label);\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    role: \"switch\",\n    \"aria-checked\": checked,\n    \"aria-disabled\": disabled,\n    \"aria-label\": typeof inner === 'string' ? inner : label,\n    tabIndex: -1\n  }, rest, {\n    ref: ref,\n    className: classes,\n    onClick: handleChange\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: prefix('inner')\n  }, inner));\n});\nToggle.displayName = 'Toggle';\nToggle.propTypes = {\n  disabled: PropTypes.bool,\n  checked: PropTypes.bool,\n  defaultChecked: PropTypes.bool,\n  checkedChildren: PropTypes.node,\n  unCheckedChildren: PropTypes.node,\n  classPrefix: PropTypes.string,\n  className: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default Toggle;"]},"metadata":{},"sourceType":"module"}