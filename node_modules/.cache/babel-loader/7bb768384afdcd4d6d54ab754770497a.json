{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/moham/documents/CSE 3311/Team9Project/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport './Fonts.css';\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport storage from 'local-storage-fallback';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport AppNav from './components/Nav';\nimport About from './components/About';\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components'; // Put any other imports below so that CSS from your\n// components takes precedence over default styles.\n// npm install styled-components\n// npm install local-storage\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\nbody {\n  background-color: ${props => props.theme.mode === 'dark' ? '#111' : '#EEE'};\n  color: ${props => props.theme.mode === 'dark' ? '#EEE' : '#111'};\n}\n`;\n_c = GlobalStyle;\n\nfunction getInitialTheme() {\n  const savedTheme = storage.getItem('theme');\n  return savedTheme ? JSON.parse(savedTheme) : {\n    mode: 'light'\n  };\n}\n\nfunction App() {\n  _s();\n\n  const [theme, setTheme] = useState(getInitialTheme);\n  useEffect(() => {\n    storage.setItem('theme', JSON.stringify(theme));\n  }, [theme]);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-lg btn-dark toggleButton\",\n        onClick: e => setTheme(theme.mode === 'dark' ? {\n          mode: 'light'\n        } : {\n          mode: 'dark'\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-sun-o\",\n          children: \" Theme \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DZ93y6MoushHNJ3xDqNSOypNhgY=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/mnt/c/Users/moham/documents/CSE 3311/Team9Project/src/App.jsx"],"names":["React","useState","useEffect","storage","AppNav","About","ThemeProvider","createGlobalStyle","GlobalStyle","props","theme","mode","getInitialTheme","savedTheme","getItem","JSON","parse","App","setTheme","setItem","stringify","e"],"mappings":";;;AAAA,OAAO,aAAP;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAO,kCAAP;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,uDAAP;AACA,SAASC,aAAT,EAAwBC,iBAAxB,QAAiD,mBAAjD,C,CAGA;AACA;AACA;AACA;;;AAEA,MAAMC,WAAW,GAAGD,iBAAkB;AACtC;AACA,sBAAsBE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAZ,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,MAAO;AAC7E,WAAWF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,IAAZ,KAAqB,MAArB,GAA8B,MAA9B,GAAuC,MAAO;AAClE;AACA,CALA;KAAMH,W;;AAON,SAASI,eAAT,GAA0B;AACxB,QAAMC,UAAU,GAAGV,OAAO,CAACW,OAAR,CAAgB,OAAhB,CAAnB;AACA,SAAOD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAH,GAA4B;AAAEF,IAAAA,IAAI,EAAE;AAAR,GAA7C;AACD;;AAED,SAASM,GAAT,GAAe;AAAA;;AACb,QAAM,CAACP,KAAD,EAAQQ,QAAR,IAAoBjB,QAAQ,CAACW,eAAD,CAAlC;AACEV,EAAAA,SAAS,CAAC,MAAI;AACZC,IAAAA,OAAO,CAACgB,OAAR,CAAgB,OAAhB,EAAyBJ,IAAI,CAACK,SAAL,CAAeV,KAAf,CAAzB;AACD,GAFQ,EAGT,CAACA,KAAD,CAHS,CAAT;AAKF,sBACE,QAAC,aAAD;AAAe,IAAA,KAAK,EAAEA,KAAtB;AAAA,4BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACE;AAAQ,QAAA,SAAS,EAAC,kCAAlB;AACA,QAAA,OAAO,EAAEW,CAAC,IAAIH,QAAQ,CAACR,KAAK,CAACC,IAAN,KAAe,MAAf,GAAwB;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAAxB,GAA4C;AAAEA,UAAAA,IAAI,EAAE;AAAR,SAA7C,CADtB;AAAA,+BAEE;AAAG,UAAA,SAAS,EAAC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAnBQM,G;;MAAAA,G;AAuBT,eAAeA,GAAf","sourcesContent":["import './Fonts.css';\r\nimport './App.css';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport storage from 'local-storage-fallback'\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport AppNav from './components/Nav';\r\nimport About from './components/About';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css';\r\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\r\n\r\n\r\n// Put any other imports below so that CSS from your\r\n// components takes precedence over default styles.\r\n// npm install styled-components\r\n// npm install local-storage\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\nbody {\r\n  background-color: ${props => props.theme.mode === 'dark' ? '#111' : '#EEE'};\r\n  color: ${props => props.theme.mode === 'dark' ? '#EEE' : '#111'};\r\n}\r\n`;\r\n\r\nfunction getInitialTheme(){\r\n  const savedTheme = storage.getItem('theme')\r\n  return savedTheme ? JSON.parse(savedTheme) : { mode: 'light' }\r\n}\r\n\r\nfunction App() {\r\n  const [theme, setTheme] = useState(getInitialTheme)\r\n    useEffect(()=>{\r\n      storage.setItem('theme', JSON.stringify(theme));\r\n    },\r\n    [theme]\r\n  );\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyle />\r\n      <div className=\"App\">\r\n        <button className=\"btn btn-lg btn-dark toggleButton\"\r\n        onClick={e => setTheme(theme.mode === 'dark' ? { mode: 'light' } : { mode: 'dark' })}>\r\n          <i className=\"fa fa-sun-o\"> Theme </i>\r\n        </button>\r\n      \r\n      </div>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}